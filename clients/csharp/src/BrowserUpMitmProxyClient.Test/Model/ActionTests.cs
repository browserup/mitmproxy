/*
 * BrowserUp MitmProxy
 *
 * ___ This is the REST API for controlling the BrowserUp MitmProxy. The BrowserUp MitmProxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 
 *
 * The version of the OpenAPI document: 1.26.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BrowserUpMitmProxyClient.Model;
using BrowserUpMitmProxyClient.Client;
using System.Reflection;

namespace BrowserUpMitmProxyClient.Test.Model
{
    /// <summary>
    ///  Class for testing Action
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ActionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Action
        //private Action instance;

        public ActionTests()
        {
            // TODO uncomment below to create an instance of Action
            //instance = new Action();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Action
        /// </summary>
        [Fact]
        public void ActionInstanceTest()
        {
            // TODO uncomment below to test "IsType" Action
            //Assert.IsType<Action>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'ClassName'
        /// </summary>
        [Fact]
        public void ClassNameTest()
        {
            // TODO unit test for the property 'ClassName'
        }

        /// <summary>
        /// Test the property 'TagName'
        /// </summary>
        [Fact]
        public void TagNameTest()
        {
            // TODO unit test for the property 'TagName'
        }

        /// <summary>
        /// Test the property 'Xpath'
        /// </summary>
        [Fact]
        public void XpathTest()
        {
            // TODO unit test for the property 'Xpath'
        }

        /// <summary>
        /// Test the property 'DataAttributes'
        /// </summary>
        [Fact]
        public void DataAttributesTest()
        {
            // TODO unit test for the property 'DataAttributes'
        }

        /// <summary>
        /// Test the property 'FormName'
        /// </summary>
        [Fact]
        public void FormNameTest()
        {
            // TODO unit test for the property 'FormName'
        }

        /// <summary>
        /// Test the property 'Content'
        /// </summary>
        [Fact]
        public void ContentTest()
        {
            // TODO unit test for the property 'Content'
        }
    }
}
