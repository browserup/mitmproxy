/*
 * BrowserUp MitmProxy
 *
 * ___ This is the REST API for controlling the BrowserUp MitmProxy. The BrowserUp MitmProxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 
 *
 * The version of the OpenAPI document: 1.24
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BrowserUpMitmProxyClient.Api;
using BrowserUpMitmProxyClient.Model;
using BrowserUpMitmProxyClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BrowserUpMitmProxyClient.Test.Model
{
    /// <summary>
    ///  Class for testing MatchCriteria
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MatchCriteriaTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MatchCriteria
        //private MatchCriteria instance;

        public MatchCriteriaTests()
        {
            // TODO uncomment below to create an instance of MatchCriteria
            //instance = new MatchCriteria();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MatchCriteria
        /// </summary>
        [Fact]
        public void MatchCriteriaInstanceTest()
        {
            // TODO uncomment below to test "IsType" MatchCriteria
            //Assert.IsType<MatchCriteria>(instance);
        }


        /// <summary>
        /// Test the property 'Url'
        /// </summary>
        [Fact]
        public void UrlTest()
        {
            // TODO unit test for the property 'Url'
        }
        /// <summary>
        /// Test the property 'Page'
        /// </summary>
        [Fact]
        public void PageTest()
        {
            // TODO unit test for the property 'Page'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'Content'
        /// </summary>
        [Fact]
        public void ContentTest()
        {
            // TODO unit test for the property 'Content'
        }
        /// <summary>
        /// Test the property 'ContentType'
        /// </summary>
        [Fact]
        public void ContentTypeTest()
        {
            // TODO unit test for the property 'ContentType'
        }
        /// <summary>
        /// Test the property 'WebsocketMessage'
        /// </summary>
        [Fact]
        public void WebsocketMessageTest()
        {
            // TODO unit test for the property 'WebsocketMessage'
        }
        /// <summary>
        /// Test the property 'RequestHeader'
        /// </summary>
        [Fact]
        public void RequestHeaderTest()
        {
            // TODO unit test for the property 'RequestHeader'
        }
        /// <summary>
        /// Test the property 'RequestCookie'
        /// </summary>
        [Fact]
        public void RequestCookieTest()
        {
            // TODO unit test for the property 'RequestCookie'
        }
        /// <summary>
        /// Test the property 'ResponseHeader'
        /// </summary>
        [Fact]
        public void ResponseHeaderTest()
        {
            // TODO unit test for the property 'ResponseHeader'
        }
        /// <summary>
        /// Test the property 'ResponseCookie'
        /// </summary>
        [Fact]
        public void ResponseCookieTest()
        {
            // TODO unit test for the property 'ResponseCookie'
        }
        /// <summary>
        /// Test the property 'JsonValid'
        /// </summary>
        [Fact]
        public void JsonValidTest()
        {
            // TODO unit test for the property 'JsonValid'
        }
        /// <summary>
        /// Test the property 'JsonPath'
        /// </summary>
        [Fact]
        public void JsonPathTest()
        {
            // TODO unit test for the property 'JsonPath'
        }
        /// <summary>
        /// Test the property 'JsonSchema'
        /// </summary>
        [Fact]
        public void JsonSchemaTest()
        {
            // TODO unit test for the property 'JsonSchema'
        }
        /// <summary>
        /// Test the property 'ErrorIfNoTraffic'
        /// </summary>
        [Fact]
        public void ErrorIfNoTrafficTest()
        {
            // TODO unit test for the property 'ErrorIfNoTraffic'
        }

    }

}
