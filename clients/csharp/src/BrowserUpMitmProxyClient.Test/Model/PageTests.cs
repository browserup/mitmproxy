/*
 * BrowserUp MitmProxy
 *
 * ___ This is the REST API for controlling the BrowserUp MitmProxy. The BrowserUp MitmProxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 
 *
 * The version of the OpenAPI document: 1.27.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BrowserUpMitmProxyClient.Model;
using BrowserUpMitmProxyClient.Client;
using System.Reflection;

namespace BrowserUpMitmProxyClient.Test.Model
{
    /// <summary>
    ///  Class for testing Page
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PageTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Page
        //private Page instance;

        public PageTests()
        {
            // TODO uncomment below to create an instance of Page
            //instance = new Page();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Page
        /// </summary>
        [Fact]
        public void PageInstanceTest()
        {
            // TODO uncomment below to test "IsType" Page
            //Assert.IsType<Page>(instance);
        }

        /// <summary>
        /// Test the property 'StartedDateTime'
        /// </summary>
        [Fact]
        public void StartedDateTimeTest()
        {
            // TODO unit test for the property 'StartedDateTime'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Fact]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }

        /// <summary>
        /// Test the property 'PageTimings'
        /// </summary>
        [Fact]
        public void PageTimingsTest()
        {
            // TODO unit test for the property 'PageTimings'
        }

        /// <summary>
        /// Test the property 'Verifications'
        /// </summary>
        [Fact]
        public void VerificationsTest()
        {
            // TODO unit test for the property 'Verifications'
        }

        /// <summary>
        /// Test the property 'Metrics'
        /// </summary>
        [Fact]
        public void MetricsTest()
        {
            // TODO unit test for the property 'Metrics'
        }

        /// <summary>
        /// Test the property 'Errors'
        /// </summary>
        [Fact]
        public void ErrorsTest()
        {
            // TODO unit test for the property 'Errors'
        }

        /// <summary>
        /// Test the property 'SpanId'
        /// </summary>
        [Fact]
        public void SpanIdTest()
        {
            // TODO unit test for the property 'SpanId'
        }

        /// <summary>
        /// Test the property 'ParentId'
        /// </summary>
        [Fact]
        public void ParentIdTest()
        {
            // TODO unit test for the property 'ParentId'
        }

        /// <summary>
        /// Test the property 'Comment'
        /// </summary>
        [Fact]
        public void CommentTest()
        {
            // TODO unit test for the property 'Comment'
        }
    }
}
