/*
 * BrowserUp MitmProxy
 * ___ This is the REST API for controlling the BrowserUp MitmProxy. The BrowserUp MitmProxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.browserup.proxy_client;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for HarEntryResponseContent
 */
public class HarEntryResponseContentTest {
    private final HarEntryResponseContent model = new HarEntryResponseContent();

    /**
     * Model tests for HarEntryResponseContent
     */
    @Test
    public void testHarEntryResponseContent() {
        // TODO: test HarEntryResponseContent
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'compression'
     */
    @Test
    public void compressionTest() {
        // TODO: test compression
    }

    /**
     * Test the property 'mimeType'
     */
    @Test
    public void mimeTypeTest() {
        // TODO: test mimeType
    }

    /**
     * Test the property 'text'
     */
    @Test
    public void textTest() {
        // TODO: test text
    }

    /**
     * Test the property 'encoding'
     */
    @Test
    public void encodingTest() {
        // TODO: test encoding
    }

    /**
     * Test the property 'videoBufferedPercent'
     */
    @Test
    public void videoBufferedPercentTest() {
        // TODO: test videoBufferedPercent
    }

    /**
     * Test the property 'videoStallCount'
     */
    @Test
    public void videoStallCountTest() {
        // TODO: test videoStallCount
    }

    /**
     * Test the property 'videoDecodedByteCount'
     */
    @Test
    public void videoDecodedByteCountTest() {
        // TODO: test videoDecodedByteCount
    }

    /**
     * Test the property 'videoWaitingCount'
     */
    @Test
    public void videoWaitingCountTest() {
        // TODO: test videoWaitingCount
    }

    /**
     * Test the property 'videoErrorCount'
     */
    @Test
    public void videoErrorCountTest() {
        // TODO: test videoErrorCount
    }

    /**
     * Test the property 'videoDroppedFrames'
     */
    @Test
    public void videoDroppedFramesTest() {
        // TODO: test videoDroppedFrames
    }

    /**
     * Test the property 'videoTotalFrames'
     */
    @Test
    public void videoTotalFramesTest() {
        // TODO: test videoTotalFrames
    }

    /**
     * Test the property 'videoAudioBytesDecoded'
     */
    @Test
    public void videoAudioBytesDecodedTest() {
        // TODO: test videoAudioBytesDecoded
    }

    /**
     * Test the property 'comment'
     */
    @Test
    public void commentTest() {
        // TODO: test comment
    }

}
