/*
BrowserUp MitmProxy

___ This is the REST API for controlling the BrowserUp MitmProxy. The BrowserUp MitmProxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 

API version: 1.26.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package BrowserUpMitmProxyClient

import (
	"encoding/json"
)

// checks if the PageTiming type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PageTiming{}

// PageTiming struct for PageTiming
type PageTiming struct {
	// onContentLoad per the browser
	OnContentLoad *int32 `json:"onContentLoad,omitempty"`
	// onLoad per the browser
	OnLoad *int32 `json:"onLoad,omitempty"`
	// firstInputDelay from the browser
	FirstInputDelay *int32 `json:"_firstInputDelay,omitempty"`
	// firstPaint from the browser
	FirstPaint *int32 `json:"_firstPaint,omitempty"`
	// cumulativeLayoutShift metric from the browser
	CumulativeLayoutShift *int32 `json:"_cumulativeLayoutShift,omitempty"`
	// largestContentfulPaint from the browser
	LargestContentfulPaint *int32 `json:"_largestContentfulPaint,omitempty"`
	// domInteractive from the browser
	DomInteractive *int32 `json:"_domInteractive,omitempty"`
	// firstContentfulPaint from the browser
	FirstContentfulPaint *int32 `json:"_firstContentfulPaint,omitempty"`
	// dns lookup time from the browser
	Dns *int32 `json:"_dns,omitempty"`
	// Ssl connect time from the browser
	Ssl *int32 `json:"_ssl,omitempty"`
	// Time to first byte of the page's first request per the browser
	TimeToFirstByte *int32 `json:"_timeToFirstByte,omitempty"`
	// Top level href, including hashtag, etc per the browser
	Href *string `json:"_href,omitempty"`
	// W3C Trace Context span ID for this page
	SpanId *string `json:"_span_id,omitempty"`
	// W3C Trace Context parent span ID (typically the HAR log span ID)
	ParentId *string `json:"_parent_id,omitempty"`
}

// NewPageTiming instantiates a new PageTiming object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageTiming() *PageTiming {
	this := PageTiming{}
	return &this
}

// NewPageTimingWithDefaults instantiates a new PageTiming object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageTimingWithDefaults() *PageTiming {
	this := PageTiming{}
	return &this
}

// GetOnContentLoad returns the OnContentLoad field value if set, zero value otherwise.
func (o *PageTiming) GetOnContentLoad() int32 {
	if o == nil || IsNil(o.OnContentLoad) {
		var ret int32
		return ret
	}
	return *o.OnContentLoad
}

// GetOnContentLoadOk returns a tuple with the OnContentLoad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTiming) GetOnContentLoadOk() (*int32, bool) {
	if o == nil || IsNil(o.OnContentLoad) {
		return nil, false
	}
	return o.OnContentLoad, true
}

// HasOnContentLoad returns a boolean if a field has been set.
func (o *PageTiming) HasOnContentLoad() bool {
	if o != nil && !IsNil(o.OnContentLoad) {
		return true
	}

	return false
}

// SetOnContentLoad gets a reference to the given int32 and assigns it to the OnContentLoad field.
func (o *PageTiming) SetOnContentLoad(v int32) {
	o.OnContentLoad = &v
}

// GetOnLoad returns the OnLoad field value if set, zero value otherwise.
func (o *PageTiming) GetOnLoad() int32 {
	if o == nil || IsNil(o.OnLoad) {
		var ret int32
		return ret
	}
	return *o.OnLoad
}

// GetOnLoadOk returns a tuple with the OnLoad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTiming) GetOnLoadOk() (*int32, bool) {
	if o == nil || IsNil(o.OnLoad) {
		return nil, false
	}
	return o.OnLoad, true
}

// HasOnLoad returns a boolean if a field has been set.
func (o *PageTiming) HasOnLoad() bool {
	if o != nil && !IsNil(o.OnLoad) {
		return true
	}

	return false
}

// SetOnLoad gets a reference to the given int32 and assigns it to the OnLoad field.
func (o *PageTiming) SetOnLoad(v int32) {
	o.OnLoad = &v
}

// GetFirstInputDelay returns the FirstInputDelay field value if set, zero value otherwise.
func (o *PageTiming) GetFirstInputDelay() int32 {
	if o == nil || IsNil(o.FirstInputDelay) {
		var ret int32
		return ret
	}
	return *o.FirstInputDelay
}

// GetFirstInputDelayOk returns a tuple with the FirstInputDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTiming) GetFirstInputDelayOk() (*int32, bool) {
	if o == nil || IsNil(o.FirstInputDelay) {
		return nil, false
	}
	return o.FirstInputDelay, true
}

// HasFirstInputDelay returns a boolean if a field has been set.
func (o *PageTiming) HasFirstInputDelay() bool {
	if o != nil && !IsNil(o.FirstInputDelay) {
		return true
	}

	return false
}

// SetFirstInputDelay gets a reference to the given int32 and assigns it to the FirstInputDelay field.
func (o *PageTiming) SetFirstInputDelay(v int32) {
	o.FirstInputDelay = &v
}

// GetFirstPaint returns the FirstPaint field value if set, zero value otherwise.
func (o *PageTiming) GetFirstPaint() int32 {
	if o == nil || IsNil(o.FirstPaint) {
		var ret int32
		return ret
	}
	return *o.FirstPaint
}

// GetFirstPaintOk returns a tuple with the FirstPaint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTiming) GetFirstPaintOk() (*int32, bool) {
	if o == nil || IsNil(o.FirstPaint) {
		return nil, false
	}
	return o.FirstPaint, true
}

// HasFirstPaint returns a boolean if a field has been set.
func (o *PageTiming) HasFirstPaint() bool {
	if o != nil && !IsNil(o.FirstPaint) {
		return true
	}

	return false
}

// SetFirstPaint gets a reference to the given int32 and assigns it to the FirstPaint field.
func (o *PageTiming) SetFirstPaint(v int32) {
	o.FirstPaint = &v
}

// GetCumulativeLayoutShift returns the CumulativeLayoutShift field value if set, zero value otherwise.
func (o *PageTiming) GetCumulativeLayoutShift() int32 {
	if o == nil || IsNil(o.CumulativeLayoutShift) {
		var ret int32
		return ret
	}
	return *o.CumulativeLayoutShift
}

// GetCumulativeLayoutShiftOk returns a tuple with the CumulativeLayoutShift field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTiming) GetCumulativeLayoutShiftOk() (*int32, bool) {
	if o == nil || IsNil(o.CumulativeLayoutShift) {
		return nil, false
	}
	return o.CumulativeLayoutShift, true
}

// HasCumulativeLayoutShift returns a boolean if a field has been set.
func (o *PageTiming) HasCumulativeLayoutShift() bool {
	if o != nil && !IsNil(o.CumulativeLayoutShift) {
		return true
	}

	return false
}

// SetCumulativeLayoutShift gets a reference to the given int32 and assigns it to the CumulativeLayoutShift field.
func (o *PageTiming) SetCumulativeLayoutShift(v int32) {
	o.CumulativeLayoutShift = &v
}

// GetLargestContentfulPaint returns the LargestContentfulPaint field value if set, zero value otherwise.
func (o *PageTiming) GetLargestContentfulPaint() int32 {
	if o == nil || IsNil(o.LargestContentfulPaint) {
		var ret int32
		return ret
	}
	return *o.LargestContentfulPaint
}

// GetLargestContentfulPaintOk returns a tuple with the LargestContentfulPaint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTiming) GetLargestContentfulPaintOk() (*int32, bool) {
	if o == nil || IsNil(o.LargestContentfulPaint) {
		return nil, false
	}
	return o.LargestContentfulPaint, true
}

// HasLargestContentfulPaint returns a boolean if a field has been set.
func (o *PageTiming) HasLargestContentfulPaint() bool {
	if o != nil && !IsNil(o.LargestContentfulPaint) {
		return true
	}

	return false
}

// SetLargestContentfulPaint gets a reference to the given int32 and assigns it to the LargestContentfulPaint field.
func (o *PageTiming) SetLargestContentfulPaint(v int32) {
	o.LargestContentfulPaint = &v
}

// GetDomInteractive returns the DomInteractive field value if set, zero value otherwise.
func (o *PageTiming) GetDomInteractive() int32 {
	if o == nil || IsNil(o.DomInteractive) {
		var ret int32
		return ret
	}
	return *o.DomInteractive
}

// GetDomInteractiveOk returns a tuple with the DomInteractive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTiming) GetDomInteractiveOk() (*int32, bool) {
	if o == nil || IsNil(o.DomInteractive) {
		return nil, false
	}
	return o.DomInteractive, true
}

// HasDomInteractive returns a boolean if a field has been set.
func (o *PageTiming) HasDomInteractive() bool {
	if o != nil && !IsNil(o.DomInteractive) {
		return true
	}

	return false
}

// SetDomInteractive gets a reference to the given int32 and assigns it to the DomInteractive field.
func (o *PageTiming) SetDomInteractive(v int32) {
	o.DomInteractive = &v
}

// GetFirstContentfulPaint returns the FirstContentfulPaint field value if set, zero value otherwise.
func (o *PageTiming) GetFirstContentfulPaint() int32 {
	if o == nil || IsNil(o.FirstContentfulPaint) {
		var ret int32
		return ret
	}
	return *o.FirstContentfulPaint
}

// GetFirstContentfulPaintOk returns a tuple with the FirstContentfulPaint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTiming) GetFirstContentfulPaintOk() (*int32, bool) {
	if o == nil || IsNil(o.FirstContentfulPaint) {
		return nil, false
	}
	return o.FirstContentfulPaint, true
}

// HasFirstContentfulPaint returns a boolean if a field has been set.
func (o *PageTiming) HasFirstContentfulPaint() bool {
	if o != nil && !IsNil(o.FirstContentfulPaint) {
		return true
	}

	return false
}

// SetFirstContentfulPaint gets a reference to the given int32 and assigns it to the FirstContentfulPaint field.
func (o *PageTiming) SetFirstContentfulPaint(v int32) {
	o.FirstContentfulPaint = &v
}

// GetDns returns the Dns field value if set, zero value otherwise.
func (o *PageTiming) GetDns() int32 {
	if o == nil || IsNil(o.Dns) {
		var ret int32
		return ret
	}
	return *o.Dns
}

// GetDnsOk returns a tuple with the Dns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTiming) GetDnsOk() (*int32, bool) {
	if o == nil || IsNil(o.Dns) {
		return nil, false
	}
	return o.Dns, true
}

// HasDns returns a boolean if a field has been set.
func (o *PageTiming) HasDns() bool {
	if o != nil && !IsNil(o.Dns) {
		return true
	}

	return false
}

// SetDns gets a reference to the given int32 and assigns it to the Dns field.
func (o *PageTiming) SetDns(v int32) {
	o.Dns = &v
}

// GetSsl returns the Ssl field value if set, zero value otherwise.
func (o *PageTiming) GetSsl() int32 {
	if o == nil || IsNil(o.Ssl) {
		var ret int32
		return ret
	}
	return *o.Ssl
}

// GetSslOk returns a tuple with the Ssl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTiming) GetSslOk() (*int32, bool) {
	if o == nil || IsNil(o.Ssl) {
		return nil, false
	}
	return o.Ssl, true
}

// HasSsl returns a boolean if a field has been set.
func (o *PageTiming) HasSsl() bool {
	if o != nil && !IsNil(o.Ssl) {
		return true
	}

	return false
}

// SetSsl gets a reference to the given int32 and assigns it to the Ssl field.
func (o *PageTiming) SetSsl(v int32) {
	o.Ssl = &v
}

// GetTimeToFirstByte returns the TimeToFirstByte field value if set, zero value otherwise.
func (o *PageTiming) GetTimeToFirstByte() int32 {
	if o == nil || IsNil(o.TimeToFirstByte) {
		var ret int32
		return ret
	}
	return *o.TimeToFirstByte
}

// GetTimeToFirstByteOk returns a tuple with the TimeToFirstByte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTiming) GetTimeToFirstByteOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeToFirstByte) {
		return nil, false
	}
	return o.TimeToFirstByte, true
}

// HasTimeToFirstByte returns a boolean if a field has been set.
func (o *PageTiming) HasTimeToFirstByte() bool {
	if o != nil && !IsNil(o.TimeToFirstByte) {
		return true
	}

	return false
}

// SetTimeToFirstByte gets a reference to the given int32 and assigns it to the TimeToFirstByte field.
func (o *PageTiming) SetTimeToFirstByte(v int32) {
	o.TimeToFirstByte = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *PageTiming) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTiming) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *PageTiming) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *PageTiming) SetHref(v string) {
	o.Href = &v
}

// GetSpanId returns the SpanId field value if set, zero value otherwise.
func (o *PageTiming) GetSpanId() string {
	if o == nil || IsNil(o.SpanId) {
		var ret string
		return ret
	}
	return *o.SpanId
}

// GetSpanIdOk returns a tuple with the SpanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTiming) GetSpanIdOk() (*string, bool) {
	if o == nil || IsNil(o.SpanId) {
		return nil, false
	}
	return o.SpanId, true
}

// HasSpanId returns a boolean if a field has been set.
func (o *PageTiming) HasSpanId() bool {
	if o != nil && !IsNil(o.SpanId) {
		return true
	}

	return false
}

// SetSpanId gets a reference to the given string and assigns it to the SpanId field.
func (o *PageTiming) SetSpanId(v string) {
	o.SpanId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *PageTiming) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageTiming) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *PageTiming) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *PageTiming) SetParentId(v string) {
	o.ParentId = &v
}

func (o PageTiming) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PageTiming) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OnContentLoad) {
		toSerialize["onContentLoad"] = o.OnContentLoad
	}
	if !IsNil(o.OnLoad) {
		toSerialize["onLoad"] = o.OnLoad
	}
	if !IsNil(o.FirstInputDelay) {
		toSerialize["_firstInputDelay"] = o.FirstInputDelay
	}
	if !IsNil(o.FirstPaint) {
		toSerialize["_firstPaint"] = o.FirstPaint
	}
	if !IsNil(o.CumulativeLayoutShift) {
		toSerialize["_cumulativeLayoutShift"] = o.CumulativeLayoutShift
	}
	if !IsNil(o.LargestContentfulPaint) {
		toSerialize["_largestContentfulPaint"] = o.LargestContentfulPaint
	}
	if !IsNil(o.DomInteractive) {
		toSerialize["_domInteractive"] = o.DomInteractive
	}
	if !IsNil(o.FirstContentfulPaint) {
		toSerialize["_firstContentfulPaint"] = o.FirstContentfulPaint
	}
	if !IsNil(o.Dns) {
		toSerialize["_dns"] = o.Dns
	}
	if !IsNil(o.Ssl) {
		toSerialize["_ssl"] = o.Ssl
	}
	if !IsNil(o.TimeToFirstByte) {
		toSerialize["_timeToFirstByte"] = o.TimeToFirstByte
	}
	if !IsNil(o.Href) {
		toSerialize["_href"] = o.Href
	}
	if !IsNil(o.SpanId) {
		toSerialize["_span_id"] = o.SpanId
	}
	if !IsNil(o.ParentId) {
		toSerialize["_parent_id"] = o.ParentId
	}
	return toSerialize, nil
}

type NullablePageTiming struct {
	value *PageTiming
	isSet bool
}

func (v NullablePageTiming) Get() *PageTiming {
	return v.value
}

func (v *NullablePageTiming) Set(val *PageTiming) {
	v.value = val
	v.isSet = true
}

func (v NullablePageTiming) IsSet() bool {
	return v.isSet
}

func (v *NullablePageTiming) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageTiming(val *PageTiming) *NullablePageTiming {
	return &NullablePageTiming{value: val, isSet: true}
}

func (v NullablePageTiming) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageTiming) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


