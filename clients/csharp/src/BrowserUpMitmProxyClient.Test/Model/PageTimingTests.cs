/*
 * BrowserUp MitmProxy
 *
 * ___ This is the REST API for controlling the BrowserUp MitmProxy. The BrowserUp MitmProxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 
 *
 * The version of the OpenAPI document: 1.27.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BrowserUpMitmProxyClient.Model;
using BrowserUpMitmProxyClient.Client;
using System.Reflection;

namespace BrowserUpMitmProxyClient.Test.Model
{
    /// <summary>
    ///  Class for testing PageTiming
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PageTimingTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PageTiming
        //private PageTiming instance;

        public PageTimingTests()
        {
            // TODO uncomment below to create an instance of PageTiming
            //instance = new PageTiming();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PageTiming
        /// </summary>
        [Fact]
        public void PageTimingInstanceTest()
        {
            // TODO uncomment below to test "IsType" PageTiming
            //Assert.IsType<PageTiming>(instance);
        }

        /// <summary>
        /// Test the property 'OnContentLoad'
        /// </summary>
        [Fact]
        public void OnContentLoadTest()
        {
            // TODO unit test for the property 'OnContentLoad'
        }

        /// <summary>
        /// Test the property 'OnLoad'
        /// </summary>
        [Fact]
        public void OnLoadTest()
        {
            // TODO unit test for the property 'OnLoad'
        }

        /// <summary>
        /// Test the property 'FirstInputDelay'
        /// </summary>
        [Fact]
        public void FirstInputDelayTest()
        {
            // TODO unit test for the property 'FirstInputDelay'
        }

        /// <summary>
        /// Test the property 'FirstPaint'
        /// </summary>
        [Fact]
        public void FirstPaintTest()
        {
            // TODO unit test for the property 'FirstPaint'
        }

        /// <summary>
        /// Test the property 'CumulativeLayoutShift'
        /// </summary>
        [Fact]
        public void CumulativeLayoutShiftTest()
        {
            // TODO unit test for the property 'CumulativeLayoutShift'
        }

        /// <summary>
        /// Test the property 'LargestContentfulPaint'
        /// </summary>
        [Fact]
        public void LargestContentfulPaintTest()
        {
            // TODO unit test for the property 'LargestContentfulPaint'
        }

        /// <summary>
        /// Test the property 'DomInteractive'
        /// </summary>
        [Fact]
        public void DomInteractiveTest()
        {
            // TODO unit test for the property 'DomInteractive'
        }

        /// <summary>
        /// Test the property 'FirstContentfulPaint'
        /// </summary>
        [Fact]
        public void FirstContentfulPaintTest()
        {
            // TODO unit test for the property 'FirstContentfulPaint'
        }

        /// <summary>
        /// Test the property 'Dns'
        /// </summary>
        [Fact]
        public void DnsTest()
        {
            // TODO unit test for the property 'Dns'
        }

        /// <summary>
        /// Test the property 'Ssl'
        /// </summary>
        [Fact]
        public void SslTest()
        {
            // TODO unit test for the property 'Ssl'
        }

        /// <summary>
        /// Test the property 'TimeToFirstByte'
        /// </summary>
        [Fact]
        public void TimeToFirstByteTest()
        {
            // TODO unit test for the property 'TimeToFirstByte'
        }

        /// <summary>
        /// Test the property 'Href'
        /// </summary>
        [Fact]
        public void HrefTest()
        {
            // TODO unit test for the property 'Href'
        }

        /// <summary>
        /// Test the property 'SpanId'
        /// </summary>
        [Fact]
        public void SpanIdTest()
        {
            // TODO unit test for the property 'SpanId'
        }

        /// <summary>
        /// Test the property 'ParentId'
        /// </summary>
        [Fact]
        public void ParentIdTest()
        {
            // TODO unit test for the property 'ParentId'
        }
    }
}
