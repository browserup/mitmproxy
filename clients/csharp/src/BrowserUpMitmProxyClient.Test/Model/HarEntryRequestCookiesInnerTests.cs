/*
 * BrowserUp MitmProxy
 *
 * ___ This is the REST API for controlling the BrowserUp MitmProxy. The BrowserUp MitmProxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 
 *
 * The version of the OpenAPI document: 1.24
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BrowserUpMitmProxyClient.Api;
using BrowserUpMitmProxyClient.Model;
using BrowserUpMitmProxyClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BrowserUpMitmProxyClient.Test.Model
{
    /// <summary>
    ///  Class for testing HarEntryRequestCookiesInner
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class HarEntryRequestCookiesInnerTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for HarEntryRequestCookiesInner
        //private HarEntryRequestCookiesInner instance;

        public HarEntryRequestCookiesInnerTests()
        {
            // TODO uncomment below to create an instance of HarEntryRequestCookiesInner
            //instance = new HarEntryRequestCookiesInner();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of HarEntryRequestCookiesInner
        /// </summary>
        [Fact]
        public void HarEntryRequestCookiesInnerInstanceTest()
        {
            // TODO uncomment below to test "IsType" HarEntryRequestCookiesInner
            //Assert.IsType<HarEntryRequestCookiesInner>(instance);
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Value'
        /// </summary>
        [Fact]
        public void ValueTest()
        {
            // TODO unit test for the property 'Value'
        }
        /// <summary>
        /// Test the property 'Path'
        /// </summary>
        [Fact]
        public void PathTest()
        {
            // TODO unit test for the property 'Path'
        }
        /// <summary>
        /// Test the property 'Domain'
        /// </summary>
        [Fact]
        public void DomainTest()
        {
            // TODO unit test for the property 'Domain'
        }
        /// <summary>
        /// Test the property 'Expires'
        /// </summary>
        [Fact]
        public void ExpiresTest()
        {
            // TODO unit test for the property 'Expires'
        }
        /// <summary>
        /// Test the property 'HttpOnly'
        /// </summary>
        [Fact]
        public void HttpOnlyTest()
        {
            // TODO unit test for the property 'HttpOnly'
        }
        /// <summary>
        /// Test the property 'Secure'
        /// </summary>
        [Fact]
        public void SecureTest()
        {
            // TODO unit test for the property 'Secure'
        }
        /// <summary>
        /// Test the property 'Comment'
        /// </summary>
        [Fact]
        public void CommentTest()
        {
            // TODO unit test for the property 'Comment'
        }

    }

}
