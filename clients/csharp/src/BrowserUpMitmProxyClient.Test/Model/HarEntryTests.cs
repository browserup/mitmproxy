/*
 * BrowserUp MitmProxy
 *
 * ___ This is the REST API for controlling the BrowserUp MitmProxy. The BrowserUp MitmProxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 
 *
 * The version of the OpenAPI document: 1.24
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BrowserUpMitmProxyClient.Api;
using BrowserUpMitmProxyClient.Model;
using BrowserUpMitmProxyClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BrowserUpMitmProxyClient.Test.Model
{
    /// <summary>
    ///  Class for testing HarEntry
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class HarEntryTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for HarEntry
        //private HarEntry instance;

        public HarEntryTests()
        {
            // TODO uncomment below to create an instance of HarEntry
            //instance = new HarEntry();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of HarEntry
        /// </summary>
        [Fact]
        public void HarEntryInstanceTest()
        {
            // TODO uncomment below to test "IsType" HarEntry
            //Assert.IsType<HarEntry>(instance);
        }


        /// <summary>
        /// Test the property 'Pageref'
        /// </summary>
        [Fact]
        public void PagerefTest()
        {
            // TODO unit test for the property 'Pageref'
        }
        /// <summary>
        /// Test the property 'StartedDateTime'
        /// </summary>
        [Fact]
        public void StartedDateTimeTest()
        {
            // TODO unit test for the property 'StartedDateTime'
        }
        /// <summary>
        /// Test the property 'Time'
        /// </summary>
        [Fact]
        public void TimeTest()
        {
            // TODO unit test for the property 'Time'
        }
        /// <summary>
        /// Test the property 'Request'
        /// </summary>
        [Fact]
        public void RequestTest()
        {
            // TODO unit test for the property 'Request'
        }
        /// <summary>
        /// Test the property 'Response'
        /// </summary>
        [Fact]
        public void ResponseTest()
        {
            // TODO unit test for the property 'Response'
        }
        /// <summary>
        /// Test the property 'Cache'
        /// </summary>
        [Fact]
        public void CacheTest()
        {
            // TODO unit test for the property 'Cache'
        }
        /// <summary>
        /// Test the property 'Timings'
        /// </summary>
        [Fact]
        public void TimingsTest()
        {
            // TODO unit test for the property 'Timings'
        }
        /// <summary>
        /// Test the property 'ServerIPAddress'
        /// </summary>
        [Fact]
        public void ServerIPAddressTest()
        {
            // TODO unit test for the property 'ServerIPAddress'
        }
        /// <summary>
        /// Test the property 'WebSocketMessages'
        /// </summary>
        [Fact]
        public void WebSocketMessagesTest()
        {
            // TODO unit test for the property 'WebSocketMessages'
        }
        /// <summary>
        /// Test the property 'Connection'
        /// </summary>
        [Fact]
        public void ConnectionTest()
        {
            // TODO unit test for the property 'Connection'
        }
        /// <summary>
        /// Test the property 'Comment'
        /// </summary>
        [Fact]
        public void CommentTest()
        {
            // TODO unit test for the property 'Comment'
        }

    }

}
