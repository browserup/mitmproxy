/*
 * BrowserUp MitmProxy
 *
 * ___ This is the REST API for controlling the BrowserUp MitmProxy. The BrowserUp MitmProxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 
 *
 * The version of the OpenAPI document: 1.24
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BrowserUpMitmProxyClient.Api;
using BrowserUpMitmProxyClient.Model;
using BrowserUpMitmProxyClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BrowserUpMitmProxyClient.Test.Model
{
    /// <summary>
    ///  Class for testing HarEntryResponseContent
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class HarEntryResponseContentTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for HarEntryResponseContent
        //private HarEntryResponseContent instance;

        public HarEntryResponseContentTests()
        {
            // TODO uncomment below to create an instance of HarEntryResponseContent
            //instance = new HarEntryResponseContent();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of HarEntryResponseContent
        /// </summary>
        [Fact]
        public void HarEntryResponseContentInstanceTest()
        {
            // TODO uncomment below to test "IsType" HarEntryResponseContent
            //Assert.IsType<HarEntryResponseContent>(instance);
        }


        /// <summary>
        /// Test the property 'Size'
        /// </summary>
        [Fact]
        public void SizeTest()
        {
            // TODO unit test for the property 'Size'
        }
        /// <summary>
        /// Test the property 'Compression'
        /// </summary>
        [Fact]
        public void CompressionTest()
        {
            // TODO unit test for the property 'Compression'
        }
        /// <summary>
        /// Test the property 'MimeType'
        /// </summary>
        [Fact]
        public void MimeTypeTest()
        {
            // TODO unit test for the property 'MimeType'
        }
        /// <summary>
        /// Test the property 'Text'
        /// </summary>
        [Fact]
        public void TextTest()
        {
            // TODO unit test for the property 'Text'
        }
        /// <summary>
        /// Test the property 'Encoding'
        /// </summary>
        [Fact]
        public void EncodingTest()
        {
            // TODO unit test for the property 'Encoding'
        }
        /// <summary>
        /// Test the property 'VideoBufferedPercent'
        /// </summary>
        [Fact]
        public void VideoBufferedPercentTest()
        {
            // TODO unit test for the property 'VideoBufferedPercent'
        }
        /// <summary>
        /// Test the property 'VideoStallCount'
        /// </summary>
        [Fact]
        public void VideoStallCountTest()
        {
            // TODO unit test for the property 'VideoStallCount'
        }
        /// <summary>
        /// Test the property 'VideoDecodedByteCount'
        /// </summary>
        [Fact]
        public void VideoDecodedByteCountTest()
        {
            // TODO unit test for the property 'VideoDecodedByteCount'
        }
        /// <summary>
        /// Test the property 'VideoWaitingCount'
        /// </summary>
        [Fact]
        public void VideoWaitingCountTest()
        {
            // TODO unit test for the property 'VideoWaitingCount'
        }
        /// <summary>
        /// Test the property 'VideoErrorCount'
        /// </summary>
        [Fact]
        public void VideoErrorCountTest()
        {
            // TODO unit test for the property 'VideoErrorCount'
        }
        /// <summary>
        /// Test the property 'VideoDroppedFrames'
        /// </summary>
        [Fact]
        public void VideoDroppedFramesTest()
        {
            // TODO unit test for the property 'VideoDroppedFrames'
        }
        /// <summary>
        /// Test the property 'VideoTotalFrames'
        /// </summary>
        [Fact]
        public void VideoTotalFramesTest()
        {
            // TODO unit test for the property 'VideoTotalFrames'
        }
        /// <summary>
        /// Test the property 'VideoAudioBytesDecoded'
        /// </summary>
        [Fact]
        public void VideoAudioBytesDecodedTest()
        {
            // TODO unit test for the property 'VideoAudioBytesDecoded'
        }
        /// <summary>
        /// Test the property 'Comment'
        /// </summary>
        [Fact]
        public void CommentTest()
        {
            // TODO unit test for the property 'Comment'
        }

    }

}
