/**
 * BrowserUp MitmProxy
 * ___ This is the REST API for controlling the BrowserUp MitmProxy. The BrowserUp MitmProxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 
 *
 * The version of the OpenAPI document: 1.25
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HarEntryResponseContent model module.
 * @module BrowserUpMitmProxyClient/model/HarEntryResponseContent
 * @version 1.0.0
 */
class HarEntryResponseContent {
    /**
     * Constructs a new <code>HarEntryResponseContent</code>.
     * @alias module:BrowserUpMitmProxyClient/model/HarEntryResponseContent
     * @param size {Number} 
     * @param mimeType {String} 
     */
    constructor(size, mimeType) { 
        
        HarEntryResponseContent.initialize(this, size, mimeType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, size, mimeType) { 
        obj['size'] = size;
        obj['mimeType'] = mimeType;
        obj['_videoBufferedPercent'] = -1;
        obj['_videoStallCount'] = -1;
        obj['_videoDecodedByteCount'] = -1;
        obj['_videoWaitingCount'] = -1;
        obj['_videoErrorCount'] = -1;
        obj['_videoDroppedFrames'] = -1;
        obj['_videoTotalFrames'] = -1;
        obj['_videoAudioBytesDecoded'] = -1;
    }

    /**
     * Constructs a <code>HarEntryResponseContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:BrowserUpMitmProxyClient/model/HarEntryResponseContent} obj Optional instance to populate.
     * @return {module:BrowserUpMitmProxyClient/model/HarEntryResponseContent} The populated <code>HarEntryResponseContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HarEntryResponseContent();

            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('compression')) {
                obj['compression'] = ApiClient.convertToType(data['compression'], 'Number');
            }
            if (data.hasOwnProperty('mimeType')) {
                obj['mimeType'] = ApiClient.convertToType(data['mimeType'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('encoding')) {
                obj['encoding'] = ApiClient.convertToType(data['encoding'], 'String');
            }
            if (data.hasOwnProperty('_videoBufferedPercent')) {
                obj['_videoBufferedPercent'] = ApiClient.convertToType(data['_videoBufferedPercent'], 'Number');
            }
            if (data.hasOwnProperty('_videoStallCount')) {
                obj['_videoStallCount'] = ApiClient.convertToType(data['_videoStallCount'], 'Number');
            }
            if (data.hasOwnProperty('_videoDecodedByteCount')) {
                obj['_videoDecodedByteCount'] = ApiClient.convertToType(data['_videoDecodedByteCount'], 'Number');
            }
            if (data.hasOwnProperty('_videoWaitingCount')) {
                obj['_videoWaitingCount'] = ApiClient.convertToType(data['_videoWaitingCount'], 'Number');
            }
            if (data.hasOwnProperty('_videoErrorCount')) {
                obj['_videoErrorCount'] = ApiClient.convertToType(data['_videoErrorCount'], 'Number');
            }
            if (data.hasOwnProperty('_videoDroppedFrames')) {
                obj['_videoDroppedFrames'] = ApiClient.convertToType(data['_videoDroppedFrames'], 'Number');
            }
            if (data.hasOwnProperty('_videoTotalFrames')) {
                obj['_videoTotalFrames'] = ApiClient.convertToType(data['_videoTotalFrames'], 'Number');
            }
            if (data.hasOwnProperty('_videoAudioBytesDecoded')) {
                obj['_videoAudioBytesDecoded'] = ApiClient.convertToType(data['_videoAudioBytesDecoded'], 'Number');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HarEntryResponseContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HarEntryResponseContent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HarEntryResponseContent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['mimeType'] && !(typeof data['mimeType'] === 'string' || data['mimeType'] instanceof String)) {
            throw new Error("Expected the field `mimeType` to be a primitive type in the JSON string but got " + data['mimeType']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // ensure the json data is a string
        if (data['encoding'] && !(typeof data['encoding'] === 'string' || data['encoding'] instanceof String)) {
            throw new Error("Expected the field `encoding` to be a primitive type in the JSON string but got " + data['encoding']);
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }

        return true;
    }


}

HarEntryResponseContent.RequiredProperties = ["size", "mimeType"];

/**
 * @member {Number} size
 */
HarEntryResponseContent.prototype['size'] = undefined;

/**
 * @member {Number} compression
 */
HarEntryResponseContent.prototype['compression'] = undefined;

/**
 * @member {String} mimeType
 */
HarEntryResponseContent.prototype['mimeType'] = undefined;

/**
 * @member {String} text
 */
HarEntryResponseContent.prototype['text'] = undefined;

/**
 * @member {String} encoding
 */
HarEntryResponseContent.prototype['encoding'] = undefined;

/**
 * @member {Number} _videoBufferedPercent
 * @default -1
 */
HarEntryResponseContent.prototype['_videoBufferedPercent'] = -1;

/**
 * @member {Number} _videoStallCount
 * @default -1
 */
HarEntryResponseContent.prototype['_videoStallCount'] = -1;

/**
 * @member {Number} _videoDecodedByteCount
 * @default -1
 */
HarEntryResponseContent.prototype['_videoDecodedByteCount'] = -1;

/**
 * @member {Number} _videoWaitingCount
 * @default -1
 */
HarEntryResponseContent.prototype['_videoWaitingCount'] = -1;

/**
 * @member {Number} _videoErrorCount
 * @default -1
 */
HarEntryResponseContent.prototype['_videoErrorCount'] = -1;

/**
 * @member {Number} _videoDroppedFrames
 * @default -1
 */
HarEntryResponseContent.prototype['_videoDroppedFrames'] = -1;

/**
 * @member {Number} _videoTotalFrames
 * @default -1
 */
HarEntryResponseContent.prototype['_videoTotalFrames'] = -1;

/**
 * @member {Number} _videoAudioBytesDecoded
 * @default -1
 */
HarEntryResponseContent.prototype['_videoAudioBytesDecoded'] = -1;

/**
 * @member {String} comment
 */
HarEntryResponseContent.prototype['comment'] = undefined;






export default HarEntryResponseContent;

