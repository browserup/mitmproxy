/*
BrowserUp MitmProxy

___ This is the REST API for controlling the BrowserUp MitmProxy. The BrowserUp MitmProxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 

API version: 1.25
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package BrowserUpMitmProxyClient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HarEntryResponseContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HarEntryResponseContent{}

// HarEntryResponseContent struct for HarEntryResponseContent
type HarEntryResponseContent struct {
	Size int32 `json:"size"`
	Compression *int32 `json:"compression,omitempty"`
	MimeType string `json:"mimeType"`
	Text *string `json:"text,omitempty"`
	Encoding *string `json:"encoding,omitempty"`
	VideoBufferedPercent *int64 `json:"_videoBufferedPercent,omitempty"`
	VideoStallCount *int64 `json:"_videoStallCount,omitempty"`
	VideoDecodedByteCount *int64 `json:"_videoDecodedByteCount,omitempty"`
	VideoWaitingCount *int64 `json:"_videoWaitingCount,omitempty"`
	VideoErrorCount *int64 `json:"_videoErrorCount,omitempty"`
	VideoDroppedFrames *int64 `json:"_videoDroppedFrames,omitempty"`
	VideoTotalFrames *int64 `json:"_videoTotalFrames,omitempty"`
	VideoAudioBytesDecoded *int64 `json:"_videoAudioBytesDecoded,omitempty"`
	Comment *string `json:"comment,omitempty"`
}

type _HarEntryResponseContent HarEntryResponseContent

// NewHarEntryResponseContent instantiates a new HarEntryResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHarEntryResponseContent(size int32, mimeType string) *HarEntryResponseContent {
	this := HarEntryResponseContent{}
	this.Size = size
	this.MimeType = mimeType
	var videoBufferedPercent int64 = -1
	this.VideoBufferedPercent = &videoBufferedPercent
	var videoStallCount int64 = -1
	this.VideoStallCount = &videoStallCount
	var videoDecodedByteCount int64 = -1
	this.VideoDecodedByteCount = &videoDecodedByteCount
	var videoWaitingCount int64 = -1
	this.VideoWaitingCount = &videoWaitingCount
	var videoErrorCount int64 = -1
	this.VideoErrorCount = &videoErrorCount
	var videoDroppedFrames int64 = -1
	this.VideoDroppedFrames = &videoDroppedFrames
	var videoTotalFrames int64 = -1
	this.VideoTotalFrames = &videoTotalFrames
	var videoAudioBytesDecoded int64 = -1
	this.VideoAudioBytesDecoded = &videoAudioBytesDecoded
	return &this
}

// NewHarEntryResponseContentWithDefaults instantiates a new HarEntryResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHarEntryResponseContentWithDefaults() *HarEntryResponseContent {
	this := HarEntryResponseContent{}
	var videoBufferedPercent int64 = -1
	this.VideoBufferedPercent = &videoBufferedPercent
	var videoStallCount int64 = -1
	this.VideoStallCount = &videoStallCount
	var videoDecodedByteCount int64 = -1
	this.VideoDecodedByteCount = &videoDecodedByteCount
	var videoWaitingCount int64 = -1
	this.VideoWaitingCount = &videoWaitingCount
	var videoErrorCount int64 = -1
	this.VideoErrorCount = &videoErrorCount
	var videoDroppedFrames int64 = -1
	this.VideoDroppedFrames = &videoDroppedFrames
	var videoTotalFrames int64 = -1
	this.VideoTotalFrames = &videoTotalFrames
	var videoAudioBytesDecoded int64 = -1
	this.VideoAudioBytesDecoded = &videoAudioBytesDecoded
	return &this
}

// GetSize returns the Size field value
func (o *HarEntryResponseContent) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *HarEntryResponseContent) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *HarEntryResponseContent) SetSize(v int32) {
	o.Size = v
}

// GetCompression returns the Compression field value if set, zero value otherwise.
func (o *HarEntryResponseContent) GetCompression() int32 {
	if o == nil || IsNil(o.Compression) {
		var ret int32
		return ret
	}
	return *o.Compression
}

// GetCompressionOk returns a tuple with the Compression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarEntryResponseContent) GetCompressionOk() (*int32, bool) {
	if o == nil || IsNil(o.Compression) {
		return nil, false
	}
	return o.Compression, true
}

// HasCompression returns a boolean if a field has been set.
func (o *HarEntryResponseContent) HasCompression() bool {
	if o != nil && !IsNil(o.Compression) {
		return true
	}

	return false
}

// SetCompression gets a reference to the given int32 and assigns it to the Compression field.
func (o *HarEntryResponseContent) SetCompression(v int32) {
	o.Compression = &v
}

// GetMimeType returns the MimeType field value
func (o *HarEntryResponseContent) GetMimeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MimeType
}

// GetMimeTypeOk returns a tuple with the MimeType field value
// and a boolean to check if the value has been set.
func (o *HarEntryResponseContent) GetMimeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MimeType, true
}

// SetMimeType sets field value
func (o *HarEntryResponseContent) SetMimeType(v string) {
	o.MimeType = v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *HarEntryResponseContent) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarEntryResponseContent) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *HarEntryResponseContent) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *HarEntryResponseContent) SetText(v string) {
	o.Text = &v
}

// GetEncoding returns the Encoding field value if set, zero value otherwise.
func (o *HarEntryResponseContent) GetEncoding() string {
	if o == nil || IsNil(o.Encoding) {
		var ret string
		return ret
	}
	return *o.Encoding
}

// GetEncodingOk returns a tuple with the Encoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarEntryResponseContent) GetEncodingOk() (*string, bool) {
	if o == nil || IsNil(o.Encoding) {
		return nil, false
	}
	return o.Encoding, true
}

// HasEncoding returns a boolean if a field has been set.
func (o *HarEntryResponseContent) HasEncoding() bool {
	if o != nil && !IsNil(o.Encoding) {
		return true
	}

	return false
}

// SetEncoding gets a reference to the given string and assigns it to the Encoding field.
func (o *HarEntryResponseContent) SetEncoding(v string) {
	o.Encoding = &v
}

// GetVideoBufferedPercent returns the VideoBufferedPercent field value if set, zero value otherwise.
func (o *HarEntryResponseContent) GetVideoBufferedPercent() int64 {
	if o == nil || IsNil(o.VideoBufferedPercent) {
		var ret int64
		return ret
	}
	return *o.VideoBufferedPercent
}

// GetVideoBufferedPercentOk returns a tuple with the VideoBufferedPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarEntryResponseContent) GetVideoBufferedPercentOk() (*int64, bool) {
	if o == nil || IsNil(o.VideoBufferedPercent) {
		return nil, false
	}
	return o.VideoBufferedPercent, true
}

// HasVideoBufferedPercent returns a boolean if a field has been set.
func (o *HarEntryResponseContent) HasVideoBufferedPercent() bool {
	if o != nil && !IsNil(o.VideoBufferedPercent) {
		return true
	}

	return false
}

// SetVideoBufferedPercent gets a reference to the given int64 and assigns it to the VideoBufferedPercent field.
func (o *HarEntryResponseContent) SetVideoBufferedPercent(v int64) {
	o.VideoBufferedPercent = &v
}

// GetVideoStallCount returns the VideoStallCount field value if set, zero value otherwise.
func (o *HarEntryResponseContent) GetVideoStallCount() int64 {
	if o == nil || IsNil(o.VideoStallCount) {
		var ret int64
		return ret
	}
	return *o.VideoStallCount
}

// GetVideoStallCountOk returns a tuple with the VideoStallCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarEntryResponseContent) GetVideoStallCountOk() (*int64, bool) {
	if o == nil || IsNil(o.VideoStallCount) {
		return nil, false
	}
	return o.VideoStallCount, true
}

// HasVideoStallCount returns a boolean if a field has been set.
func (o *HarEntryResponseContent) HasVideoStallCount() bool {
	if o != nil && !IsNil(o.VideoStallCount) {
		return true
	}

	return false
}

// SetVideoStallCount gets a reference to the given int64 and assigns it to the VideoStallCount field.
func (o *HarEntryResponseContent) SetVideoStallCount(v int64) {
	o.VideoStallCount = &v
}

// GetVideoDecodedByteCount returns the VideoDecodedByteCount field value if set, zero value otherwise.
func (o *HarEntryResponseContent) GetVideoDecodedByteCount() int64 {
	if o == nil || IsNil(o.VideoDecodedByteCount) {
		var ret int64
		return ret
	}
	return *o.VideoDecodedByteCount
}

// GetVideoDecodedByteCountOk returns a tuple with the VideoDecodedByteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarEntryResponseContent) GetVideoDecodedByteCountOk() (*int64, bool) {
	if o == nil || IsNil(o.VideoDecodedByteCount) {
		return nil, false
	}
	return o.VideoDecodedByteCount, true
}

// HasVideoDecodedByteCount returns a boolean if a field has been set.
func (o *HarEntryResponseContent) HasVideoDecodedByteCount() bool {
	if o != nil && !IsNil(o.VideoDecodedByteCount) {
		return true
	}

	return false
}

// SetVideoDecodedByteCount gets a reference to the given int64 and assigns it to the VideoDecodedByteCount field.
func (o *HarEntryResponseContent) SetVideoDecodedByteCount(v int64) {
	o.VideoDecodedByteCount = &v
}

// GetVideoWaitingCount returns the VideoWaitingCount field value if set, zero value otherwise.
func (o *HarEntryResponseContent) GetVideoWaitingCount() int64 {
	if o == nil || IsNil(o.VideoWaitingCount) {
		var ret int64
		return ret
	}
	return *o.VideoWaitingCount
}

// GetVideoWaitingCountOk returns a tuple with the VideoWaitingCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarEntryResponseContent) GetVideoWaitingCountOk() (*int64, bool) {
	if o == nil || IsNil(o.VideoWaitingCount) {
		return nil, false
	}
	return o.VideoWaitingCount, true
}

// HasVideoWaitingCount returns a boolean if a field has been set.
func (o *HarEntryResponseContent) HasVideoWaitingCount() bool {
	if o != nil && !IsNil(o.VideoWaitingCount) {
		return true
	}

	return false
}

// SetVideoWaitingCount gets a reference to the given int64 and assigns it to the VideoWaitingCount field.
func (o *HarEntryResponseContent) SetVideoWaitingCount(v int64) {
	o.VideoWaitingCount = &v
}

// GetVideoErrorCount returns the VideoErrorCount field value if set, zero value otherwise.
func (o *HarEntryResponseContent) GetVideoErrorCount() int64 {
	if o == nil || IsNil(o.VideoErrorCount) {
		var ret int64
		return ret
	}
	return *o.VideoErrorCount
}

// GetVideoErrorCountOk returns a tuple with the VideoErrorCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarEntryResponseContent) GetVideoErrorCountOk() (*int64, bool) {
	if o == nil || IsNil(o.VideoErrorCount) {
		return nil, false
	}
	return o.VideoErrorCount, true
}

// HasVideoErrorCount returns a boolean if a field has been set.
func (o *HarEntryResponseContent) HasVideoErrorCount() bool {
	if o != nil && !IsNil(o.VideoErrorCount) {
		return true
	}

	return false
}

// SetVideoErrorCount gets a reference to the given int64 and assigns it to the VideoErrorCount field.
func (o *HarEntryResponseContent) SetVideoErrorCount(v int64) {
	o.VideoErrorCount = &v
}

// GetVideoDroppedFrames returns the VideoDroppedFrames field value if set, zero value otherwise.
func (o *HarEntryResponseContent) GetVideoDroppedFrames() int64 {
	if o == nil || IsNil(o.VideoDroppedFrames) {
		var ret int64
		return ret
	}
	return *o.VideoDroppedFrames
}

// GetVideoDroppedFramesOk returns a tuple with the VideoDroppedFrames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarEntryResponseContent) GetVideoDroppedFramesOk() (*int64, bool) {
	if o == nil || IsNil(o.VideoDroppedFrames) {
		return nil, false
	}
	return o.VideoDroppedFrames, true
}

// HasVideoDroppedFrames returns a boolean if a field has been set.
func (o *HarEntryResponseContent) HasVideoDroppedFrames() bool {
	if o != nil && !IsNil(o.VideoDroppedFrames) {
		return true
	}

	return false
}

// SetVideoDroppedFrames gets a reference to the given int64 and assigns it to the VideoDroppedFrames field.
func (o *HarEntryResponseContent) SetVideoDroppedFrames(v int64) {
	o.VideoDroppedFrames = &v
}

// GetVideoTotalFrames returns the VideoTotalFrames field value if set, zero value otherwise.
func (o *HarEntryResponseContent) GetVideoTotalFrames() int64 {
	if o == nil || IsNil(o.VideoTotalFrames) {
		var ret int64
		return ret
	}
	return *o.VideoTotalFrames
}

// GetVideoTotalFramesOk returns a tuple with the VideoTotalFrames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarEntryResponseContent) GetVideoTotalFramesOk() (*int64, bool) {
	if o == nil || IsNil(o.VideoTotalFrames) {
		return nil, false
	}
	return o.VideoTotalFrames, true
}

// HasVideoTotalFrames returns a boolean if a field has been set.
func (o *HarEntryResponseContent) HasVideoTotalFrames() bool {
	if o != nil && !IsNil(o.VideoTotalFrames) {
		return true
	}

	return false
}

// SetVideoTotalFrames gets a reference to the given int64 and assigns it to the VideoTotalFrames field.
func (o *HarEntryResponseContent) SetVideoTotalFrames(v int64) {
	o.VideoTotalFrames = &v
}

// GetVideoAudioBytesDecoded returns the VideoAudioBytesDecoded field value if set, zero value otherwise.
func (o *HarEntryResponseContent) GetVideoAudioBytesDecoded() int64 {
	if o == nil || IsNil(o.VideoAudioBytesDecoded) {
		var ret int64
		return ret
	}
	return *o.VideoAudioBytesDecoded
}

// GetVideoAudioBytesDecodedOk returns a tuple with the VideoAudioBytesDecoded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarEntryResponseContent) GetVideoAudioBytesDecodedOk() (*int64, bool) {
	if o == nil || IsNil(o.VideoAudioBytesDecoded) {
		return nil, false
	}
	return o.VideoAudioBytesDecoded, true
}

// HasVideoAudioBytesDecoded returns a boolean if a field has been set.
func (o *HarEntryResponseContent) HasVideoAudioBytesDecoded() bool {
	if o != nil && !IsNil(o.VideoAudioBytesDecoded) {
		return true
	}

	return false
}

// SetVideoAudioBytesDecoded gets a reference to the given int64 and assigns it to the VideoAudioBytesDecoded field.
func (o *HarEntryResponseContent) SetVideoAudioBytesDecoded(v int64) {
	o.VideoAudioBytesDecoded = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *HarEntryResponseContent) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarEntryResponseContent) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *HarEntryResponseContent) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *HarEntryResponseContent) SetComment(v string) {
	o.Comment = &v
}

func (o HarEntryResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HarEntryResponseContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["size"] = o.Size
	if !IsNil(o.Compression) {
		toSerialize["compression"] = o.Compression
	}
	toSerialize["mimeType"] = o.MimeType
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Encoding) {
		toSerialize["encoding"] = o.Encoding
	}
	if !IsNil(o.VideoBufferedPercent) {
		toSerialize["_videoBufferedPercent"] = o.VideoBufferedPercent
	}
	if !IsNil(o.VideoStallCount) {
		toSerialize["_videoStallCount"] = o.VideoStallCount
	}
	if !IsNil(o.VideoDecodedByteCount) {
		toSerialize["_videoDecodedByteCount"] = o.VideoDecodedByteCount
	}
	if !IsNil(o.VideoWaitingCount) {
		toSerialize["_videoWaitingCount"] = o.VideoWaitingCount
	}
	if !IsNil(o.VideoErrorCount) {
		toSerialize["_videoErrorCount"] = o.VideoErrorCount
	}
	if !IsNil(o.VideoDroppedFrames) {
		toSerialize["_videoDroppedFrames"] = o.VideoDroppedFrames
	}
	if !IsNil(o.VideoTotalFrames) {
		toSerialize["_videoTotalFrames"] = o.VideoTotalFrames
	}
	if !IsNil(o.VideoAudioBytesDecoded) {
		toSerialize["_videoAudioBytesDecoded"] = o.VideoAudioBytesDecoded
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return toSerialize, nil
}

func (o *HarEntryResponseContent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"size",
		"mimeType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHarEntryResponseContent := _HarEntryResponseContent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHarEntryResponseContent)

	if err != nil {
		return err
	}

	*o = HarEntryResponseContent(varHarEntryResponseContent)

	return err
}

type NullableHarEntryResponseContent struct {
	value *HarEntryResponseContent
	isSet bool
}

func (v NullableHarEntryResponseContent) Get() *HarEntryResponseContent {
	return v.value
}

func (v *NullableHarEntryResponseContent) Set(val *HarEntryResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableHarEntryResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableHarEntryResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHarEntryResponseContent(val *HarEntryResponseContent) *NullableHarEntryResponseContent {
	return &NullableHarEntryResponseContent{value: val, isSet: true}
}

func (v NullableHarEntryResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHarEntryResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


