/*
BrowserUp MitmProxy

___ This is the REST API for controlling the BrowserUp MitmProxy. The BrowserUp MitmProxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 

API version: 1.26.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package BrowserUpMitmProxyClient

import (
	"encoding/json"
)

// checks if the LargestContentfulPaint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LargestContentfulPaint{}

// LargestContentfulPaint struct for LargestContentfulPaint
type LargestContentfulPaint struct {
	StartTime *int64 `json:"startTime,omitempty"`
	Size *int64 `json:"size,omitempty"`
	DomPath *string `json:"domPath,omitempty"`
	Tag *string `json:"tag,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LargestContentfulPaint LargestContentfulPaint

// NewLargestContentfulPaint instantiates a new LargestContentfulPaint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLargestContentfulPaint() *LargestContentfulPaint {
	this := LargestContentfulPaint{}
	var startTime int64 = -1
	this.StartTime = &startTime
	var size int64 = -1
	this.Size = &size
	var domPath string = ""
	this.DomPath = &domPath
	var tag string = ""
	this.Tag = &tag
	return &this
}

// NewLargestContentfulPaintWithDefaults instantiates a new LargestContentfulPaint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLargestContentfulPaintWithDefaults() *LargestContentfulPaint {
	this := LargestContentfulPaint{}
	var startTime int64 = -1
	this.StartTime = &startTime
	var size int64 = -1
	this.Size = &size
	var domPath string = ""
	this.DomPath = &domPath
	var tag string = ""
	this.Tag = &tag
	return &this
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *LargestContentfulPaint) GetStartTime() int64 {
	if o == nil || IsNil(o.StartTime) {
		var ret int64
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LargestContentfulPaint) GetStartTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *LargestContentfulPaint) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given int64 and assigns it to the StartTime field.
func (o *LargestContentfulPaint) SetStartTime(v int64) {
	o.StartTime = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *LargestContentfulPaint) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LargestContentfulPaint) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *LargestContentfulPaint) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *LargestContentfulPaint) SetSize(v int64) {
	o.Size = &v
}

// GetDomPath returns the DomPath field value if set, zero value otherwise.
func (o *LargestContentfulPaint) GetDomPath() string {
	if o == nil || IsNil(o.DomPath) {
		var ret string
		return ret
	}
	return *o.DomPath
}

// GetDomPathOk returns a tuple with the DomPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LargestContentfulPaint) GetDomPathOk() (*string, bool) {
	if o == nil || IsNil(o.DomPath) {
		return nil, false
	}
	return o.DomPath, true
}

// HasDomPath returns a boolean if a field has been set.
func (o *LargestContentfulPaint) HasDomPath() bool {
	if o != nil && !IsNil(o.DomPath) {
		return true
	}

	return false
}

// SetDomPath gets a reference to the given string and assigns it to the DomPath field.
func (o *LargestContentfulPaint) SetDomPath(v string) {
	o.DomPath = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *LargestContentfulPaint) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LargestContentfulPaint) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *LargestContentfulPaint) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *LargestContentfulPaint) SetTag(v string) {
	o.Tag = &v
}

func (o LargestContentfulPaint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LargestContentfulPaint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.DomPath) {
		toSerialize["domPath"] = o.DomPath
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LargestContentfulPaint) UnmarshalJSON(data []byte) (err error) {
	varLargestContentfulPaint := _LargestContentfulPaint{}

	err = json.Unmarshal(data, &varLargestContentfulPaint)

	if err != nil {
		return err
	}

	*o = LargestContentfulPaint(varLargestContentfulPaint)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "startTime")
		delete(additionalProperties, "size")
		delete(additionalProperties, "domPath")
		delete(additionalProperties, "tag")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLargestContentfulPaint struct {
	value *LargestContentfulPaint
	isSet bool
}

func (v NullableLargestContentfulPaint) Get() *LargestContentfulPaint {
	return v.value
}

func (v *NullableLargestContentfulPaint) Set(val *LargestContentfulPaint) {
	v.value = val
	v.isSet = true
}

func (v NullableLargestContentfulPaint) IsSet() bool {
	return v.isSet
}

func (v *NullableLargestContentfulPaint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLargestContentfulPaint(val *LargestContentfulPaint) *NullableLargestContentfulPaint {
	return &NullableLargestContentfulPaint{value: val, isSet: true}
}

func (v NullableLargestContentfulPaint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLargestContentfulPaint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


