/*
BrowserUp MitmProxy

___ This is the REST API for controlling the BrowserUp MitmProxy. The BrowserUp MitmProxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 

API version: 1.25
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package BrowserUpMitmProxyClient

import (
	"encoding/json"
)

// checks if the MatchCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchCriteria{}

// MatchCriteria A set of criteria for filtering HTTP Requests and Responses.                          Criteria are AND based, and use python regular expressions for string comparison
type MatchCriteria struct {
	// Request URL regexp to match
	Url *string `json:"url,omitempty"`
	// current|all
	Page *string `json:"page,omitempty"`
	// HTTP Status code to match.
	Status *string `json:"status,omitempty"`
	// Body content regexp content to match
	Content *string `json:"content,omitempty"`
	// Content type
	ContentType *string `json:"content_type,omitempty"`
	// Websocket message text to match
	WebsocketMessage *string `json:"websocket_message,omitempty"`
	RequestHeader *NameValuePair `json:"request_header,omitempty"`
	RequestCookie *NameValuePair `json:"request_cookie,omitempty"`
	ResponseHeader *NameValuePair `json:"response_header,omitempty"`
	ResponseCookie *NameValuePair `json:"response_cookie,omitempty"`
	// Is valid JSON
	JsonValid *bool `json:"json_valid,omitempty"`
	// Has JSON path
	JsonPath *string `json:"json_path,omitempty"`
	// Validates against passed JSON schema
	JsonSchema *string `json:"json_schema,omitempty"`
	// If the proxy has NO traffic at all, return error
	ErrorIfNoTraffic *bool `json:"error_if_no_traffic,omitempty"`
}

// NewMatchCriteria instantiates a new MatchCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchCriteria() *MatchCriteria {
	this := MatchCriteria{}
	var errorIfNoTraffic bool = true
	this.ErrorIfNoTraffic = &errorIfNoTraffic
	return &this
}

// NewMatchCriteriaWithDefaults instantiates a new MatchCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchCriteriaWithDefaults() *MatchCriteria {
	this := MatchCriteria{}
	var errorIfNoTraffic bool = true
	this.ErrorIfNoTraffic = &errorIfNoTraffic
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *MatchCriteria) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchCriteria) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *MatchCriteria) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *MatchCriteria) SetUrl(v string) {
	o.Url = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *MatchCriteria) GetPage() string {
	if o == nil || IsNil(o.Page) {
		var ret string
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchCriteria) GetPageOk() (*string, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *MatchCriteria) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given string and assigns it to the Page field.
func (o *MatchCriteria) SetPage(v string) {
	o.Page = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MatchCriteria) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchCriteria) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MatchCriteria) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MatchCriteria) SetStatus(v string) {
	o.Status = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *MatchCriteria) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchCriteria) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *MatchCriteria) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *MatchCriteria) SetContent(v string) {
	o.Content = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *MatchCriteria) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchCriteria) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *MatchCriteria) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *MatchCriteria) SetContentType(v string) {
	o.ContentType = &v
}

// GetWebsocketMessage returns the WebsocketMessage field value if set, zero value otherwise.
func (o *MatchCriteria) GetWebsocketMessage() string {
	if o == nil || IsNil(o.WebsocketMessage) {
		var ret string
		return ret
	}
	return *o.WebsocketMessage
}

// GetWebsocketMessageOk returns a tuple with the WebsocketMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchCriteria) GetWebsocketMessageOk() (*string, bool) {
	if o == nil || IsNil(o.WebsocketMessage) {
		return nil, false
	}
	return o.WebsocketMessage, true
}

// HasWebsocketMessage returns a boolean if a field has been set.
func (o *MatchCriteria) HasWebsocketMessage() bool {
	if o != nil && !IsNil(o.WebsocketMessage) {
		return true
	}

	return false
}

// SetWebsocketMessage gets a reference to the given string and assigns it to the WebsocketMessage field.
func (o *MatchCriteria) SetWebsocketMessage(v string) {
	o.WebsocketMessage = &v
}

// GetRequestHeader returns the RequestHeader field value if set, zero value otherwise.
func (o *MatchCriteria) GetRequestHeader() NameValuePair {
	if o == nil || IsNil(o.RequestHeader) {
		var ret NameValuePair
		return ret
	}
	return *o.RequestHeader
}

// GetRequestHeaderOk returns a tuple with the RequestHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchCriteria) GetRequestHeaderOk() (*NameValuePair, bool) {
	if o == nil || IsNil(o.RequestHeader) {
		return nil, false
	}
	return o.RequestHeader, true
}

// HasRequestHeader returns a boolean if a field has been set.
func (o *MatchCriteria) HasRequestHeader() bool {
	if o != nil && !IsNil(o.RequestHeader) {
		return true
	}

	return false
}

// SetRequestHeader gets a reference to the given NameValuePair and assigns it to the RequestHeader field.
func (o *MatchCriteria) SetRequestHeader(v NameValuePair) {
	o.RequestHeader = &v
}

// GetRequestCookie returns the RequestCookie field value if set, zero value otherwise.
func (o *MatchCriteria) GetRequestCookie() NameValuePair {
	if o == nil || IsNil(o.RequestCookie) {
		var ret NameValuePair
		return ret
	}
	return *o.RequestCookie
}

// GetRequestCookieOk returns a tuple with the RequestCookie field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchCriteria) GetRequestCookieOk() (*NameValuePair, bool) {
	if o == nil || IsNil(o.RequestCookie) {
		return nil, false
	}
	return o.RequestCookie, true
}

// HasRequestCookie returns a boolean if a field has been set.
func (o *MatchCriteria) HasRequestCookie() bool {
	if o != nil && !IsNil(o.RequestCookie) {
		return true
	}

	return false
}

// SetRequestCookie gets a reference to the given NameValuePair and assigns it to the RequestCookie field.
func (o *MatchCriteria) SetRequestCookie(v NameValuePair) {
	o.RequestCookie = &v
}

// GetResponseHeader returns the ResponseHeader field value if set, zero value otherwise.
func (o *MatchCriteria) GetResponseHeader() NameValuePair {
	if o == nil || IsNil(o.ResponseHeader) {
		var ret NameValuePair
		return ret
	}
	return *o.ResponseHeader
}

// GetResponseHeaderOk returns a tuple with the ResponseHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchCriteria) GetResponseHeaderOk() (*NameValuePair, bool) {
	if o == nil || IsNil(o.ResponseHeader) {
		return nil, false
	}
	return o.ResponseHeader, true
}

// HasResponseHeader returns a boolean if a field has been set.
func (o *MatchCriteria) HasResponseHeader() bool {
	if o != nil && !IsNil(o.ResponseHeader) {
		return true
	}

	return false
}

// SetResponseHeader gets a reference to the given NameValuePair and assigns it to the ResponseHeader field.
func (o *MatchCriteria) SetResponseHeader(v NameValuePair) {
	o.ResponseHeader = &v
}

// GetResponseCookie returns the ResponseCookie field value if set, zero value otherwise.
func (o *MatchCriteria) GetResponseCookie() NameValuePair {
	if o == nil || IsNil(o.ResponseCookie) {
		var ret NameValuePair
		return ret
	}
	return *o.ResponseCookie
}

// GetResponseCookieOk returns a tuple with the ResponseCookie field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchCriteria) GetResponseCookieOk() (*NameValuePair, bool) {
	if o == nil || IsNil(o.ResponseCookie) {
		return nil, false
	}
	return o.ResponseCookie, true
}

// HasResponseCookie returns a boolean if a field has been set.
func (o *MatchCriteria) HasResponseCookie() bool {
	if o != nil && !IsNil(o.ResponseCookie) {
		return true
	}

	return false
}

// SetResponseCookie gets a reference to the given NameValuePair and assigns it to the ResponseCookie field.
func (o *MatchCriteria) SetResponseCookie(v NameValuePair) {
	o.ResponseCookie = &v
}

// GetJsonValid returns the JsonValid field value if set, zero value otherwise.
func (o *MatchCriteria) GetJsonValid() bool {
	if o == nil || IsNil(o.JsonValid) {
		var ret bool
		return ret
	}
	return *o.JsonValid
}

// GetJsonValidOk returns a tuple with the JsonValid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchCriteria) GetJsonValidOk() (*bool, bool) {
	if o == nil || IsNil(o.JsonValid) {
		return nil, false
	}
	return o.JsonValid, true
}

// HasJsonValid returns a boolean if a field has been set.
func (o *MatchCriteria) HasJsonValid() bool {
	if o != nil && !IsNil(o.JsonValid) {
		return true
	}

	return false
}

// SetJsonValid gets a reference to the given bool and assigns it to the JsonValid field.
func (o *MatchCriteria) SetJsonValid(v bool) {
	o.JsonValid = &v
}

// GetJsonPath returns the JsonPath field value if set, zero value otherwise.
func (o *MatchCriteria) GetJsonPath() string {
	if o == nil || IsNil(o.JsonPath) {
		var ret string
		return ret
	}
	return *o.JsonPath
}

// GetJsonPathOk returns a tuple with the JsonPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchCriteria) GetJsonPathOk() (*string, bool) {
	if o == nil || IsNil(o.JsonPath) {
		return nil, false
	}
	return o.JsonPath, true
}

// HasJsonPath returns a boolean if a field has been set.
func (o *MatchCriteria) HasJsonPath() bool {
	if o != nil && !IsNil(o.JsonPath) {
		return true
	}

	return false
}

// SetJsonPath gets a reference to the given string and assigns it to the JsonPath field.
func (o *MatchCriteria) SetJsonPath(v string) {
	o.JsonPath = &v
}

// GetJsonSchema returns the JsonSchema field value if set, zero value otherwise.
func (o *MatchCriteria) GetJsonSchema() string {
	if o == nil || IsNil(o.JsonSchema) {
		var ret string
		return ret
	}
	return *o.JsonSchema
}

// GetJsonSchemaOk returns a tuple with the JsonSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchCriteria) GetJsonSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.JsonSchema) {
		return nil, false
	}
	return o.JsonSchema, true
}

// HasJsonSchema returns a boolean if a field has been set.
func (o *MatchCriteria) HasJsonSchema() bool {
	if o != nil && !IsNil(o.JsonSchema) {
		return true
	}

	return false
}

// SetJsonSchema gets a reference to the given string and assigns it to the JsonSchema field.
func (o *MatchCriteria) SetJsonSchema(v string) {
	o.JsonSchema = &v
}

// GetErrorIfNoTraffic returns the ErrorIfNoTraffic field value if set, zero value otherwise.
func (o *MatchCriteria) GetErrorIfNoTraffic() bool {
	if o == nil || IsNil(o.ErrorIfNoTraffic) {
		var ret bool
		return ret
	}
	return *o.ErrorIfNoTraffic
}

// GetErrorIfNoTrafficOk returns a tuple with the ErrorIfNoTraffic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchCriteria) GetErrorIfNoTrafficOk() (*bool, bool) {
	if o == nil || IsNil(o.ErrorIfNoTraffic) {
		return nil, false
	}
	return o.ErrorIfNoTraffic, true
}

// HasErrorIfNoTraffic returns a boolean if a field has been set.
func (o *MatchCriteria) HasErrorIfNoTraffic() bool {
	if o != nil && !IsNil(o.ErrorIfNoTraffic) {
		return true
	}

	return false
}

// SetErrorIfNoTraffic gets a reference to the given bool and assigns it to the ErrorIfNoTraffic field.
func (o *MatchCriteria) SetErrorIfNoTraffic(v bool) {
	o.ErrorIfNoTraffic = &v
}

func (o MatchCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.ContentType) {
		toSerialize["content_type"] = o.ContentType
	}
	if !IsNil(o.WebsocketMessage) {
		toSerialize["websocket_message"] = o.WebsocketMessage
	}
	if !IsNil(o.RequestHeader) {
		toSerialize["request_header"] = o.RequestHeader
	}
	if !IsNil(o.RequestCookie) {
		toSerialize["request_cookie"] = o.RequestCookie
	}
	if !IsNil(o.ResponseHeader) {
		toSerialize["response_header"] = o.ResponseHeader
	}
	if !IsNil(o.ResponseCookie) {
		toSerialize["response_cookie"] = o.ResponseCookie
	}
	if !IsNil(o.JsonValid) {
		toSerialize["json_valid"] = o.JsonValid
	}
	if !IsNil(o.JsonPath) {
		toSerialize["json_path"] = o.JsonPath
	}
	if !IsNil(o.JsonSchema) {
		toSerialize["json_schema"] = o.JsonSchema
	}
	if !IsNil(o.ErrorIfNoTraffic) {
		toSerialize["error_if_no_traffic"] = o.ErrorIfNoTraffic
	}
	return toSerialize, nil
}

type NullableMatchCriteria struct {
	value *MatchCriteria
	isSet bool
}

func (v NullableMatchCriteria) Get() *MatchCriteria {
	return v.value
}

func (v *NullableMatchCriteria) Set(val *MatchCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchCriteria(val *MatchCriteria) *NullableMatchCriteria {
	return &NullableMatchCriteria{value: val, isSet: true}
}

func (v NullableMatchCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


